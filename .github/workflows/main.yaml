name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Test the stack
    runs-on: ubuntu-latest
    env:
      # prevents extra Cypress installation progress messages
      CI: 1
      # avoid warnings like "tput: No value for $TERM and no -T specified"
      TERM: xterm
    steps:
      - name: checkout master
        uses: actions/checkout@v2

      - name: set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # - uses: actions/cache@v1
      #   id: yarn-offline-mirror # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: .yarn/offline-mirror
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: install
        run: |
          yarn policies set-version
          yarn install --frozen-lockfile
          yarn workspace @lecstor/config build
          yarn workspace @lecstor/privileges build
          yarn lecs-build

      - name: bring up the app
        run: |
          yarn lecs dc up -p -t gateway
          yarn lecs dc up -p -t material-app
          ./docker/wait-for.sh localhost:80

      - name: Check running containers
        run: docker ps
        
      - name: e2e tests
        env:
          CYPRESS_baseUrl: http://localhost
        run: yarn lecs material-app cypress run

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        # with:
        #   images: 'gateway'

      - name: upload artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: screenshots
          path: tools/cypress/cypress/screenshots

      # - name: e2e tests
      #   uses: cypress-io/github-action@v1
      #   with:
      #     install: false
      #     start: "yarn lecs dc up -p material-app"
      #     working-directory: tools/cypress
      #     wait-on: 'http://localhost:80'
