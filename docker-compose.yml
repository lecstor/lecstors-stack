version: "3.7"
services:
  gateway:
    build:
      context: ./
      dockerfile: ./services/gateway/Dockerfile
      target: development
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./services/gateway:/usr/src/services/gateway
    ports: 
      - 3000:3000
  react-app:
    image: "lecstor-react-app:${TARGET}"
    build:
      context: ./
      dockerfile: ./apps/react-app/Dockerfile
      target: "${TARGET}"
    depends_on:
      - gateway
    volumes:
      - ./apps/react-app:/usr/src/apps/react-app
      - ./modules/react-ui:/usr/src/modules/react-ui
      - ./modules/config:/usr/src/modules/config
    ports: 
      - 4321:4321
  postgres:
    image: "postgres:11"
    container_name: "postgres"
    environment:
      POSTGRES_PASSWORD: fooBar
      POSTGRES_USER: lecstor
      POSTGRES_DB: lecstor
    ports:
      - "5432:5432"
    volumes:
      - storage:/var/lib/postgresql/data
  rabbitmq:
    image: "rabbitmq:alpine"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
  cypress:
    build:
      context: ./tools/cypress
    depends_on:
      - react-app
    environment:
      # pass base url with internal docker app url
      - CYPRESS_baseUrl=http://react-app:4321
      # - CYPRESS_baseUrl=http://host.docker.internal:4321
      # - DEBUG=cypress:*
      # - CI=0
    # share the current folder as volume to avoid copying
    working_dir: /e2e
    volumes:
      - ./tools/cypress:/e2e
    # command: ["cypress", "run", "--headed"]
    # command: ["./node_modules", ".bin", "cypress", "run"]

volumes:
  storage:
