version: "3.7"
services:
  gateway:
    image: "lecstor-gateway:${TAG}"
    build:
      context: ./
      dockerfile: ./services/gateway/Dockerfile
      target: "${BUILD_ENV}"
    depends_on:
      - postgres
      - rabbitmq
    labels:
      app: gateway
    environment:
      - NODE_ENV
  react-app:
    image: "lecstor-react-app:${TAG}"
    build:
      context: ./
      dockerfile: ./apps/react-app/Dockerfile
      target: "${BUILD_ENV}"
    depends_on:
      - gateway
    labels:
      kompose.service.type: LoadBalancer
    environment:
      - NODE_ENV
  material-app:
    image: "lecstor-material-app:${TAG}"
    build:
      context: ./
      dockerfile: ./apps/material-app/Dockerfile
      target: "${BUILD_ENV}"
    depends_on:
      - gateway
    labels:
      kompose.service.type: LoadBalancer
    environment:
      - NODE_ENV
  postgres:
    image: "postgres:11"
    container_name: "postgres"
    environment:
      POSTGRES_PASSWORD: fooBar
      POSTGRES_USER: lecstor
      POSTGRES_DB: lecstor
    volumes:
      - postgres-data:/var/lib/postgresql/data
  rabbitmq:
    build:
      context: rabbitmq
    hostname: "rabbit"
    labels:
      NAME: "rabbitmq"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
  # graphql-engine:
  #   image: hasura/graphql-engine:v1.2.1
  #   ports:
  #   - "8080:8080"
  #   depends_on:
  #   - "postgres"
  #   restart: always
  #   environment:
  #     HASURA_GRAPHQL_DATABASE_URL: postgres://lecstor:fooBar@postgres:5432/lecstor
  #     HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
  #     HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  #     ## uncomment next line to set an admin secret
  #     # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    
volumes:
  postgres-data:
  rabbitmq:
    